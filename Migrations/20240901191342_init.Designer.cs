// <auto-generated />
using System;
using BistroBook.Date;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BistroBook.Migrations
{
    [DbContext(typeof(BistroBookContext))]
    [Migration("20240901191342_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BistroBook.Model.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "Jan.Eriksson@gmail.com",
                            FirstName = "Jan",
                            LastName = "Eriksson",
                            PhoneNumber = "0701234567"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "Johan.Anderson@gmail.com",
                            FirstName = "Johan",
                            LastName = "Anderson",
                            PhoneNumber = "0702345678"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "Anton.StenBerg@gmail.com",
                            FirstName = "Anton",
                            LastName = "StenBerg",
                            PhoneNumber = "0703456789"
                        },
                        new
                        {
                            CustomerId = 4,
                            Email = "Ida.Lundberg@gmail.com",
                            FirstName = "Ida",
                            LastName = "Lundberg",
                            PhoneNumber = "0704567890"
                        },
                        new
                        {
                            CustomerId = 5,
                            Email = "Julia.Levenhagen@gmail.com",
                            FirstName = "Julia",
                            LastName = "Levenhagen",
                            PhoneNumber = "0705678901"
                        });
                });

            modelBuilder.Entity("BistroBook.Model.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DishName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("MenuId");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            MenuId = 1,
                            Description = "Tender meatballs served with creamy mashed potatoes, lingonberry sauce, and gravy.",
                            DishName = "Swedish Meatballs",
                            IsAvailable = true,
                            Price = 120
                        },
                        new
                        {
                            MenuId = 2,
                            Description = "Fresh salmon fillet grilled to perfection, served with dill sauce and roasted vegetables.",
                            DishName = "Grilled Salmon Fillet",
                            IsAvailable = true,
                            Price = 180
                        },
                        new
                        {
                            MenuId = 3,
                            Description = "Tagliatelle pasta tossed in a creamy mushroom sauce with a hint of garlic and Parmesan.",
                            DishName = "Creamy Mushroom Pasta",
                            IsAvailable = true,
                            Price = 140
                        },
                        new
                        {
                            MenuId = 4,
                            Description = "Crisp chicken strips served on a bed of mixed greens, cherry tomatoes, cucumbers, and honey mustard dressing.",
                            DishName = "Crispy Chicken Salad",
                            IsAvailable = true,
                            Price = 99
                        },
                        new
                        {
                            MenuId = 5,
                            Description = "A classic Swedish shrimp salad mixed with mayonnaise, dill, and lemon, served on toast.",
                            DishName = "Shrimp Skagen",
                            IsAvailable = false,
                            Price = 115
                        });
                });

            modelBuilder.Entity("BistroBook.Model.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("FK_CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("FK_TableId")
                        .HasColumnType("int");

                    b.Property<int>("GuestCount")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("ReservationId");

                    b.HasIndex("FK_CustomerId");

                    b.HasIndex("FK_TableId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationId = 1,
                            Date = new DateTime(2024, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new TimeSpan(0, 19, 0, 0, 0),
                            FK_CustomerId = 1,
                            FK_TableId = 1,
                            GuestCount = 2,
                            StartTime = new TimeSpan(0, 18, 0, 0, 0)
                        },
                        new
                        {
                            ReservationId = 2,
                            Date = new DateTime(2024, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new TimeSpan(0, 21, 0, 0, 0),
                            FK_CustomerId = 2,
                            FK_TableId = 2,
                            GuestCount = 2,
                            StartTime = new TimeSpan(0, 20, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("BistroBook.Model.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TableId"));

                    b.Property<int>("SeatCount")
                        .HasColumnType("int");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("TableId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            TableId = 1,
                            SeatCount = 4,
                            TableNumber = 1
                        },
                        new
                        {
                            TableId = 2,
                            SeatCount = 6,
                            TableNumber = 2
                        },
                        new
                        {
                            TableId = 3,
                            SeatCount = 2,
                            TableNumber = 3
                        },
                        new
                        {
                            TableId = 4,
                            SeatCount = 8,
                            TableNumber = 4
                        },
                        new
                        {
                            TableId = 5,
                            SeatCount = 5,
                            TableNumber = 5
                        });
                });

            modelBuilder.Entity("BistroBook.Model.Reservation", b =>
                {
                    b.HasOne("BistroBook.Model.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("FK_CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BistroBook.Model.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("FK_TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("BistroBook.Model.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("BistroBook.Model.Table", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
